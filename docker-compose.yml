version: '3.9'

services:
  config-server:
    build:
      context: ./config-server
    ports:
      - "7878:7878"
    environment:
      spring.application.name: config-server
      server.port: 7878
      spring.cloud.config.server.git.uri: https://gitlab.dpt-info.univ-littoral.fr/fellah.mohammednassim/cloud-supply-crate.git

  ms-registery:
    build:
      context: ./ms-registery
    ports:
      - "8761:8761"

  ms-gateway:
    build:
      context: ./ms-gateway
    ports:
      - "7777:7777"
    environment:
      PROFILE: "default"
      eureka.client.serviceUrl.defaultZone: "http://ms-registery:8761/eureka/"
    depends_on:
      - config-server
      - ms-registery

  ms-auth:
    build:
      context: ./ms-auth
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/ms-auth
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      HIBERNATE_DIALECT: org.hibernate.dialect.MySQL8Dialect
      eureka.client.serviceUrl.defaultZone: "http://ms-registery:8761/eureka/"
    ports:
      - "8080:8080"
    depends_on:
      - mysql-db
      - config-server
      - ms-registery

  ms-products:
    build:
      context: ./ms-products
    environment:
      SPRING_DATASOURCE_URL: jdbc:oracle:thin:@oracle-db:1521:xe
      SPRING_DATASOURCE_USERNAME: oracledb
      SPRING_DATASOURCE_PASSWORD: 123456
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: oracle.jdbc.OracleDriver
      HIBERNATE_DIALECT: org.hibernate.dialect.Oracle12cDialect
      eureka.client.serviceUrl.defaultZone: "http://ms-registery:8761/eureka/"
    ports:
      - "8081:8081"
    depends_on:
      oracle-db:
          condition: service_healthy
      config-server:
        condition: service_started
      ms-registery:
        condition: service_started

  ms-search:
    build:
      context: ./ms-search/django-supply-crate
    container_name: ms-search
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./ms-search/django-supply-crate:/app
    ports:
      - "8000:8000"
    env_file:
      - ./ms-search/django-supply-crate/.env
    depends_on:
      - db
      - elasticsearch
      - kafka

  kafka-consumer:
    build:
      context: ./ms-search/django-supply-crate
    command: python run_kafka_consumer.py
    volumes:
      - ./ms-search/django-supply-crate:/app
    env_file:
      - ./ms-search/django-supply-crate/.env
    depends_on:
      - ms-search
      - db
      - kafka
    restart: unless-stopped

  db:
    image: postgres:15
    container_name: postgres-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"


  mysql-db:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ms-auth
      MYSQL_USER: supplyuser
      MYSQL_PASSWORD: supplyuser
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  oracle-db:
    image: gvenzl/oracle-xe
    container_name: oracle-db
    environment:
      ORACLE_PASSWORD: 123456
      ORACLE_PDB: ORCLPDB1
      ORACLE_CHARACTERSET: AL32UTF8
      ORACLE_ALLOW_REMOTE: true
    ports:
      - "1521:1521"
      - "5500:5500"
    volumes:
      - ./oracle-init-scripts:/container-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "echo 'SELECT 1 FROM DUAL;' | sqlplus -s oracledb/123456@//localhost:1521/XE || exit 1"]
      interval: 20s
      timeout: 10s
      retries: 10


  elasticsearch:
    image: elasticsearch:8.15.0
    container_name: es
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"

  redis:
    image: redis:6
    container_name: redis
    ports:
      - "6379:6379"

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    restart: unless-stopped

volumes:
  postgres_data:
  mysql_data:
  oracle_data:


networks:
  app-network:
    driver: bridge